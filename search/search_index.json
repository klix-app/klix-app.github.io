{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>This documentation describes Klix payment gateway/checkout solution integration. Multiple integration options are available:</p> <ul> <li>Klix integration with eCommerce platforms using plugins. In case your website is built on a one of these platforms (WooCommerce, Shopify, Magento, Mozello, OpenCart, Prestashop), you will simply need to install our plugin and provide integration configuration.</li> <li>Klix integration with custom built site using our Libraries.</li> <li>Klix integration with any other platform or custom built site using our API.</li> </ul> <p>In order to become Klix merchant fill in application form and you will be contacted by our sales team. There's also option to test Klix card payments using our test environment.</p>"},{"location":"api/","title":"Klix API","text":"<p>Klix provides unified API for multiple payment methods - card and PSD2 bank payments. Full up-to-date REST API Reference can be found here. OpenAPI document that can be used to generate API client can be found here. In order to call Klix API you should first receive API credentials (Brand ID and Secret Key) from Klix representative.</p>"},{"location":"api/#api-usage-in-single-payment-scenario","title":"API usage in single payment scenario","text":""},{"location":"api/#single-payment-step-by-step-guide","title":"Single payment step-by-step guide","text":"<ol> <li>Get list of payment methods (optional). This API end-point returns name and logo of each payment method available to merchant (Klix Card payments, Citadele and other bank PSD2 payments etc.). Use this list to render a payment methods page on your site.</li> <li>Create a purchase by submitting order data to Klix. Once purchase is created link to Klix hosted payment page will be returned as <code>checkout_url</code> field value. After customer is redirected to this page Klix will handle the payment process.</li> <li>Handle one of possible payment process outcomes:<ul> <li>If customer payment is successful then callback is sent to merchant server and customer is redirected to successful purchase page specified by merchant. Note that you should consider purchase as successfully paid only after callback is received and purchase status is checked. Note that in case if callback is not used you can call Klix API to get purchase status once customer is redirected back to successful purchase page.</li> <li>If customer payment fails for some reason customer is redirected to failed purchase page.</li> <li>If cancelled payment redirect URL is specified in purchase creation request then customer will be able to go back to merchant page from Klix payment page. It's preferable to specify checkout/payment method selection page as cancelled payment redirect URL so that customer can make adjustments in shopping cart or choose different payment method.</li> </ul> </li> </ol>"},{"location":"api/#single-payment-request-examples","title":"Single payment request examples","text":"<p>These are simple request examples that illustrate Klix API usage. Always use API Reference as a single source of truth. Note that <code>&lt;Brand ID goes here&gt;</code> and <code>&lt;Secret key goes here&gt;</code> should be replaced with actual <code>Brand ID</code> and <code>Secret Key</code> received from Klix contact person.</p>"},{"location":"api/#get-list-of-available-payment-methods","title":"Get list of available payment methods","text":"<p>This operation allows you to retrieve all payment methods available to you at the current time. Note that payment method availability depends upon your agreement with Klix and it can also vary from time to time e.g. some bank payment method can be temporarily unavailable because of planned maintenance down-time. In such a case this bank payment method will be excluded from the available payment method list returned by this API end-point until planned maintenance is over and this payment method is re-enabled. That's one of the examples of why an available payment method list should be retrieved on a regular basis in order to offer only fully functional payment methods to the end-user.</p> <p>Do not call this API end-point before each purchase initiation since this API end-point is rate limited. Cache available payment methods on server side and call this API end-point not more often than once in a minute.</p> <p>List of currently supported payment methods:</p> Name Description klix Klix card payments citadele_ee_digilink Citadele Bank payments citadele_lt_digilink Citadele Bank payments citadele_lv_digilink Citadele Bank payments coop_pank_ee_pis Coop Pank payments klix_apple_pay Apple Pay payments klix_pay_later Klix Pay Later lhv_ee_pis LHV payments luminor_ee_pis Luminor payments luminor_lt_pis Luminor payments luminor_lv_pis Luminor payments revolut_pis Revolut payments seb_ee_pis SEB payments seb_lt_pis SEB payments seb_lv_pis SEB payments siauliu_lt_pis \u0160iauli\u0173 Bankas payments swedbank_ee_pis Swedbank payments swedbank_lt_pis Swedbank payments swedbank_lv_pis Swedbank payments <p>Note that this API end-point returns both payment method general availability, availability in country and additional information like human-readable payment method name and logo URI. </p> <pre><code>curl -X GET \\\n'https://portal.klix.app/api/v1/payment_methods/?currency=EUR&amp;brand_id=&lt;Brand ID goes here&gt;' \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache'\n</code></pre>"},{"location":"api/#create-available-payment-methods-purchase","title":"Create available payment methods purchase","text":"<p>This option allows to create a purchase that can be paid using any payment method available to merchant. Customer will be have an option to choose one of available payment methods after redirect to Klix payment page.</p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"success_callback\": \"https://your.site/api/successfully-paid-callback-will-be-sent-to-this-end-point\",\n   \"success_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-successfull-payment\",\n   \"failure_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-failed-payment\",\n   \"cancel_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-customer-decides-to-go-back-to-your-store-during-payment\",\n   \"purchase\": {\n      \"language\": \"lv\",\n      \"products\": [\n         {\n            \"price\": 3000,\n            \"name\": \"Xiaomi Mi Smart Band 5\"\n         },\n         {\n            \"price\": 100,\n            \"name\": \"Screen protector for Xiaomi Mi Smart Band 5\"\n         }\n      ]\n   },\n   \"client\": {\n      \"email\": \"test@test.com\"\n   },\n   \"brand_id\": \"&lt;Brand ID goes here&gt;\",\n   \"reference\": \"Your order id\"\n}'\n</code></pre>"},{"location":"api/#create-whitelisted-payment-method-purchase","title":"Create whitelisted payment method purchase","text":"<p>This option allows to create a purchase that can be paid only using specified whitelisted payment method. Most often this option is used to allow purchase to be paid using payment method selected on merchant web-site.</p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"success_callback\": \"https://your.site/api/successfully-paid-callback-will-be-sent-to-this-end-point\",\n   \"success_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-successfull-payment\",\n   \"failure_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-failed-payment\",\n   \"cancel_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-customer-decides-to-go-back-to-your-store-during-payment\",\n   \"purchase\": {\n      \"language\": \"lv\",\n      \"products\": [\n         {\n            \"price\": 3000,\n            \"name\": \"Xiaomi Mi Smart Band 5\"\n         },\n         {\n            \"price\": 100,\n            \"name\": \"Screen protector for Xiaomi Mi Smart Band 5\"\n         }\n      ]\n   },\n   \"client\": {\n      \"email\": \"test@test.com\"\n   },\n   \"payment_method_whitelist\": [\"klix\"],\n   \"brand_id\": \"&lt;Brand ID goes here&gt;\",\n   \"reference\": \"Your order id\"\n}'\n</code></pre>"},{"location":"api/#get-purchase-information","title":"Get purchase information","text":"<p><code>&lt;Purchase ID&gt;</code> is purchase identifier (field <code>id</code> value) received in purchase creation response.</p> <pre><code>curl -X GET \\\nhttps://portal.klix.app/api/v1/purchases/&lt;Purchase ID&gt;/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache'\n</code></pre>"},{"location":"api/#api-usage-in-recurring-payment-scenario","title":"API usage in recurring payment scenario","text":""},{"location":"api/#recurring-payment-step-by-step-guide","title":"Recurring payment step-by-step guide","text":"<ol> <li>Create an initial purchase with recurring flag set to <code>true</code> (see <code>\"force_recurring\": true</code> in example) in order to register payment card details for subsequent use in recurring payments. Created purchase <code>id</code> and <code>checkout_url</code> will be returned in a response. Redirect customer to <code>checkout_url</code> and Klix will handle the payment process. Store this initial purchase <code>id</code> on your side as a recurring payment token and use it later on to charge a customer payment card (see <code>&lt;Recurring payment token&gt;</code> placeholder in example). If purchase created in previous step is paid by customer then card details are successfully captured for subsequent use.</li> <li>Once customer card should be charged in a form of a recurring payment new purchase should be created via API by specifying amount that needs to be charged and transaction description. This time <code>force_recurring</code> should be <code>false</code> or can be omitted at all (see example). In this case only purchase <code>id</code> returned in response should be used in next step (see <code>&lt;Purchase id of recurring payment&gt;</code> placeholder in example). Note that <code>checkout_url</code> should not be used.</li> <li>Created purchase should be charged via API call. Note that both newly created purchase <code>id</code> created in step 2 and recurring payment token (purchase <code>id</code>) created in step 1 should be passed to this API end-point (see example).</li> </ol>"},{"location":"api/#recurring-payment-request-examples","title":"Recurring payment request examples","text":"<p>These are simple request examples that illustrate Klix API usage. Always use API Reference as a single source of truth. Note that <code>&lt;Brand ID goes here&gt;</code> and <code>&lt;Secret key goes here&gt;</code> should be replaced with actual <code>Brand ID</code> and <code>Secret Key</code> received from Klix contact person.</p>"},{"location":"api/#create-an-initial-purchase-to-register-card-for-subsequent-recurring-payments","title":"Create an initial purchase to register card for subsequent recurring payments","text":"<p>This should be done only once to make initial payment and register customer card for subsequent use.</p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"force_recurring\": true,\n   \"success_callback\": \"https://your.site/api/successfully-paid-callback-will-be-sent-to-this-end-point\",\n   \"success_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-successfull-payment\",\n   \"failure_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-failed-payment\",\n   \"cancel_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-customer-decides-to-go-back-to-your-store-during-payment\",\n   \"purchase\": {\n      \"language\": \"lv\",\n      \"products\": [\n         {\n            \"price\": 700,\n            \"name\": \"XYZ service subscription\"\n         }\n      ]\n   },\n   \"client\": {\n      \"email\": \"test@test.com\"\n   },\n   \"brand_id\": \"&lt;Brand ID goes here&gt;\",\n   \"reference\": \"Your order id\"\n}'\n</code></pre>"},{"location":"api/#create-recurring-payment","title":"Create recurring payment","text":"<p>This should be done for each recurring payment (e.g. each month).</p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"success_callback\": \"https://your.site/api/successfully-paid-callback-will-be-sent-to-this-end-point\",\n   \"purchase\": {\n      \"language\": \"lv\",\n      \"products\": [\n         {\n            \"price\": 700,\n            \"name\": \"XYZ service subscription fee for December 2020\"\n         }\n      ]\n   },\n   \"client\": {\n      \"email\": \"test@test.com\"\n   },\n   \"brand_id\": \"&lt;Brand ID goes here&gt;\",\n   \"reference\": \"Your order id\"\n}'\n</code></pre>"},{"location":"api/#charge-customer-card-as-a-recurring-payment","title":"Charge customer card as a recurring payment","text":"<pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/&lt;Purchase id of recurring payment&gt;/charge \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"recurring_token\": \"&lt;Recurring payment token&gt;\"\n}'\n</code></pre>"},{"location":"api/#api-usage-in-reservation-scenario-payment-execution-separated-from-authorization","title":"API usage in reservation scenario (payment execution separated from authorization)","text":""},{"location":"api/#reservation-step-by-step-guide","title":"Reservation step-by-step guide","text":"<ol> <li>Create a purchase by submitting order data and additional <code>skip_capture</code> flag to Klix indicating card payment authorization separation from payment execution. Once purchase is created link to Klix hosted payment page will be returned as <code>checkout_url</code> field value. Payment identifier returned in purchase creation response should be stored for later use in capture or release requests. After customer is redirected to this page Klix will capture customer card details and will reserve the funds equal to purchase total amount.</li> <li>There are two options how to proceed with reservation:<ul> <li>Capture reserved amount. There's an option to capture either full reserved amount or amount that's smaller than initially reserved amount.</li> <li>Release (return to customer) reserved amount.</li> </ul> </li> </ol> <p>Automatic release of reserved amount</p> <p>Reservations are released automatically after 6 days if capture request is not received within this period.</p>"},{"location":"api/#reservation-functionality-request-examples","title":"Reservation functionality request examples","text":"<p>These are simple request examples that illustrate Klix API usage. Always use API Reference as a single source of truth. Note that <code>&lt;Brand ID goes here&gt;</code> and <code>&lt;Secret key goes here&gt;</code> should be replaced with actual <code>Brand ID</code> and <code>Secret Key</code> received from Klix contact person.</p>"},{"location":"api/#create-a-reservation-purchase","title":"Create a reservation purchase","text":"<p>This option allows to create a purchase that will reserve purchase total amount in case of card payment. Store purchase <code>id</code> returned in response to either capture or release funds reserved by this purchase. Redirect customer to <code>checkout_url</code> returned in purchase creation response to allow customer to enter card details. Note that in case of successful reservation purchase status will be changed to \"hold\" instead of \"paid\" as in case of regular card payment.</p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"success_callback\": \"https://your.site/api/successfully-paid-callback-will-be-sent-to-this-end-point\",\n   \"success_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-successfull-payment\",\n   \"failure_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-of-failed-payment\",\n   \"cancel_redirect\": \"https://your.site/customer-will-be-redirected-here-in-case-customer-decides-to-go-back-to-your-store-during-payment\",\n   \"purchase\": {\n      \"language\": \"lv\",\n      \"products\": [\n         {\n            \"price\": 3000,\n            \"name\": \"Xiaomi Mi Smart Band 5\"\n         },\n         {\n            \"price\": 100,\n            \"name\": \"Screen protector for Xiaomi Mi Smart Band 5\"\n         }\n      ]\n   },\n   \"skip_capture\": true,\n   \"client\": {\n      \"email\": \"test@test.com\"\n   },\n   \"payment_method_whitelist\": [\"klix\"],\n   \"brand_id\": \"&lt;Brand ID goes here&gt;\",\n   \"reference\": \"Your order id\"\n}'\n</code></pre>"},{"location":"api/#capture-funds-reserved-by-previously-created-purchase","title":"Capture funds reserved by previously created purchase","text":"<p>To capture full amount previously reserved by specified purchase no request body should be sent. <code>&lt;Purchase ID&gt;</code> is purchase identifier (field <code>id</code> value) received in purchase creation response.</p> <pre><code>curl --location --request POST 'https://portal.klix.app/api/v1/purchases/&lt;Purchase ID&gt;/capture/' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer &lt;Secret key goes here&gt;'\n</code></pre>"},{"location":"api/#capture-partial-funds-reserved-by-previously-created-purchase","title":"Capture partial funds reserved by previously created purchase","text":"<p>To capture amount that's smaller than previously reserved amount this new amount should be specified in request. <code>&lt;Purchase ID&gt;</code> is purchase identifier (field <code>id</code> value) received in purchase creation response.</p> <pre><code>curl --location --request POST 'https://portal.klix.app/api/v1/purchases/&lt;Purchase ID&gt;/capture/' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n--data-raw '{\n    \"amount\": 5\n}\n'\n</code></pre>"},{"location":"api/#release-funds-reserved-by-previously-created-purchase","title":"Release funds reserved by previously created purchase","text":"<p>To release funds reserved by Purchase following request should be sent:</p> <pre><code>curl --location --request POST 'https://portal.klix.app/api/v1/purchases/&lt;Purchase ID&gt;/release/' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: Bearer &lt;Secret key goes here&gt;'\n</code></pre>"},{"location":"api/#api-usage-in-recurring-payment-reservation-scenario","title":"API usage in recurring payment &amp; reservation scenario","text":"<p>Recurring payment &amp; reservation scenario combines recurring payment and reservation scenarios - after customer performs initial card registration for recurring payments merchant can use this card for reserving initial amount and then either charging exact amount that's not greater than initially reserved amount or releasing reservation.</p>"},{"location":"api/#recurring-payment-reservation-step-by-step-guide","title":"Recurring payment &amp; reservation step-by-step guide","text":"<ol> <li>Create an initial purchase with recurring flag set to <code>true</code> (see <code>\"force_recurring\": true</code> in example) in order to register payment card details for subsequent use in recurring payments. Created purchase <code>id</code> and <code>checkout_url</code> will be returned in a response. Redirect customer to <code>checkout_url</code> and Klix will handle the payment process. Store this initial purchase <code>id</code> on your side as a recurring payment token and use it later on to reserve initial amount (see <code>&lt;Recurring payment token&gt;</code> placeholder in example). If purchase created in this step is paid by customer then card details are successfully captured for subsequent use.</li> <li>Create a new purchase once recurring purchase amount should be reserved. Additional <code>skip_capture</code> flag (see example request) should be added in request indicating card payment authorization separation from payment execution. Once purchase is created payment identifier returned in response should be stored for later use in a charge request. In this case only purchase <code>id</code> returned in response should be used in next step (see <code>&lt;Purchase id of recurring payment&gt;</code> placeholder in example). Note that <code>checkout_url</code> should not be used.</li> <li>Make charge API call to perform actual reservation of recurring payment initial amount. Note that both newly created purchase <code>id</code> created in step 2 and recurring payment token (purchase <code>id</code>) created in step 1 should be passed to this API end-point (see example).</li> <li>There are two options how to proceed with recurring payment reservation:<ul> <li>Capture reserved amount. There's an option to capture either full reserved amount or amount that's smaller than initially reserved amount.</li> <li>Release (return to customer) reserved amount.</li> </ul> </li> </ol>"},{"location":"api/#recurring-payment-reservation-request-examples","title":"Recurring payment &amp; reservation request examples","text":"<p>These are simple request examples that illustrate Klix API usage. Always use API Reference as a single source of truth. Note that <code>&lt;Brand ID goes here&gt;</code> and <code>&lt;Secret key goes here&gt;</code> should be replaced with actual <code>Brand ID</code> and <code>Secret Key</code> received from Klix contact person.</p>"},{"location":"api/#create-an-initial-purchase-to-register-card-for-subsequent-recurring-payments_1","title":"Create an initial purchase to register card for subsequent recurring payments","text":"<p>Create an initial purchase for card registration in a same way it's done in a regular recurring payment scenario.</p>"},{"location":"api/#create-recurring-payment-for-reservation","title":"Create recurring payment for reservation","text":"<p>This should be done for each recurring transaction (e.g. to reserve some predefined amount before electric car charge is started). </p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"success_callback\": \"https://your.site/api/successfully-paid-callback-will-be-sent-to-this-end-point\",\n   \"purchase\": {\n      \"language\": \"lv\",\n      \"products\": [\n         {\n            \"price\": 5000,\n            \"name\": \"Electric car charge\"\n         }\n      ]\n   },\n   \"client\": {\n      \"email\": \"test@test.com\"\n   },\n   \"skip_capture\": \"true\",\n   \"brand_id\": \"&lt;Brand ID goes here&gt;\",\n   \"reference\": \"Your order id\"\n}'\n</code></pre>"},{"location":"api/#reserve-recurring-payment-initial-amount","title":"Reserve recurring payment initial amount","text":"<p>Note that in case of successful reservation recurring purchase status will be changed to \"hold\" instead of \"paid\" as in case of regular card payment.</p> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/&lt;Purchase id of recurring payment&gt;/charge \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n   \"recurring_token\": \"&lt;Recurring payment token&gt;\"\n}'\n</code></pre>"},{"location":"api/#capture-funds-reserved-by-previously-created-purchase_1","title":"Capture funds reserved by previously created purchase","text":"<p>Note that after successful capture recurring purchase status is changed to \"paid\".</p>"},{"location":"api/#capture-partial-funds-reserved-by-previously-created-purchase_1","title":"Capture partial funds reserved by previously created purchase","text":"<p>Note that after successful capture recurring purchase status is changed to \"paid\".</p>"},{"location":"api/#release-funds-reserved-by-previously-created-purchase_1","title":"Release funds reserved by previously created purchase","text":"<p>Note that after successful capture recurring purchase status is changed to \"released\".</p>"},{"location":"api/#api-usage-in-bulk-payment-scenario","title":"API usage in bulk payment scenario","text":"<p>A bulk payment is a group of payments to multiple bank accounts (IBANs) which requires only single confirmation from customer.  Bulk payments are executed in \"all-or-nothing\" mode i.e. either each individual payment succeeds or all of them fails.</p> <p>Typical use case for bulk payment functionality is a product marketplaces where during a checkout customer pays to multiple merchants at once.  Bulk payment functionality allows to initiate and confirm these multiple payments as a single payment.</p> <p>Here is a list of the payment methods that currently support bulk payment functionality:</p> <ul> <li>seb_ee_pis</li> <li>seb_lt_pis</li> <li>seb_lv_pis</li> <li>swedbank_ee_pis</li> <li>swedbank_lt_pis</li> <li>swedbank_lv_pis</li> </ul>"},{"location":"api/#bulk-payment-step-by-step-guide","title":"Bulk payment step-by-step guide","text":"<ol> <li>Sign the agreement with Klix for the usage of bulk payment functionality. Submit the list of creditor IBANs for whitelisting.</li> <li>Initiate a bulk payment by providing multiple creditors and amounts.</li> <li>Handle a single successful payment callback for each bulk payment.</li> </ol>"},{"location":"api/#bulk-payment-request-examples","title":"Bulk payment request examples","text":"<p>These are simple request examples that illustrate Klix API usage. Always use API Reference as a single source of truth. Note that <code>&lt;Brand ID goes here&gt;</code> and <code>&lt;Secret key goes here&gt;</code> should be replaced with actual <code>Brand ID</code> and <code>Secret Key</code> received from Klix contact person.</p>"},{"location":"api/#create-a-bulk-payment-purchase","title":"Create a bulk payment purchase","text":"<p>Initiate a purchase by specifying multiple creditors and corresponding payment amounts and descriptions. In the following example Swedbank Latvia bulk payment total amount is 0.03 EUR, and it consists of two payments:</p> <ul> <li>0.02 EUR payment to John Doe's IBAN LVXXPARX0000000000001 with a payment description \"Description of payment to John Doe\"</li> <li>0.01 EUR payment to Jane Doe's IBAN LVXXHABA0000000000001 with a payment description \"Description of payment to Jane Doe\"</li> </ul> <pre><code>curl -X POST \\\nhttps://portal.klix.app/api/v1/purchases/ \\\n-H 'Accept: application/json' \\\n-H 'Authorization: Bearer &lt;Secret key goes here&gt;' \\\n-H 'Cache-Control: no-cache' \\\n-H 'Connection: keep-alive' \\\n-H 'Content-Type: application/json' \\\n-H 'Host: portal.klix.app' \\\n-H 'accept-encoding: gzip, deflate' \\\n-H 'cache-control: no-cache' \\\n-d '{\n    \"purchase\": {\n        \"products\": [\n            {\n                \"name\": \"Description of payment to John Doe\",\n                \"price\": 2\n            },\n            {\n                \"name\": \"Description of payment to Jane Doe\",\n                \"price\": 1\n            }\n        ],\n        \"payment_method_details\": {\n            \"pis_bulk_purchase\": [\n                {\n                    \"creditor_name\": \"John Doe\",\n                    \"creditor_iban\": \"LVXXPARX0000000000001\"\n                },\n                {\n                    \"creditor_name\": \"Jane Doe\",\n                    \"creditor_iban\": \"LVXXHABA0000000000001\"\n                }\n            ]\n        }\n    },\n    \"client\": {\n        \"email\": \"test@test.com\"\n    },\n    \"payment_method_whitelist\": [\"swedbank_lv_pis\"],\n    \"brand_id\": \"&lt;Brand ID goes here&gt;`\",\n    \"reference\": \"Your order id\"\n}'\n</code></pre> <p>After redirecting customer to Klix payment page (field <code>checkout_url</code> from init payment response) bulk payment details will be presented.</p> <p></p> <p>Note that all creditor IBANs should be whitelisted before bulk payment is initiated. In case at least one of the creditor IBANs is not whitelisted following error message is returned in a purchase initiation response:</p> <pre><code>{\n\"__all__\": [\n{\n\"message\": \"Creditor's IBAN 'LVXXPARX0000000000001' is not whitelisted. Please ensure the creditor's IBAN is added to the whitelist and try again.\",\n\"code\": \"invalid\"\n}\n]\n}\n</code></pre>"},{"location":"libraries/","title":"Libraries","text":"<p>Currently Klix API client library is available only for PHP programming language. If Klix API client library is not available for your programming language/platform it's worth mentioning that API client can be generated from Klix API OpenAPI document.</p>"},{"location":"libraries/#php","title":"PHP","text":"<p>Download Klix API client PHP library and follow instructions in README.md on how to install and use this library.</p>"},{"location":"marketing-guidelines/","title":"Advertising guidelines","text":"<p>Last updated 03.08.2023  <p> Here are little tips &amp; tricks to make sure you get best out of Klix. Klix has exponentially growing user amount month-over-month, becoming one of the most important payment methods in Baltics. Make sure you grasp this audience by showing them something they love about shopping - Klix! <p>Please read through these guidelines, as they contain various materials and are intended to help you stay compliant while representing Klix brand.</p>"},{"location":"marketing-guidelines/#advertising-with-klix","title":"Advertising with Klix","text":"<p>We encourage you to use Klix lock-ups on your banners. This way your audience will know that they can pay without a hassle in your shop. Please download Klix lock-ups here.</p> <p></p>"},{"location":"marketing-guidelines/#klix-marketing-materials","title":"Klix marketing materials","text":"<p>Just like any other good news, share info about Klix to your audience on your website, newsletters and social media. We've prepared everything for you, feel free to use it. </p> <p> Materials in LV, RUS and ENG languages for LATVIAN market. </p> Where to use Visuals How to use 1. Main page banner on your website Update in progress, new materials will be added soon Make sure users get information about what Klix offers right away. Keep informative Klix banner on main page banner rotation. You can change and use several of options. Make sure to link banner to informative Klix landing page, so your users can read more, if they have questions. If you have to adjust size, in this folder, there is photoshop file which you can edit. 2. Social media banners about Klix Pay Update in progress, new materials will be added soon You are now part of Klix. Celebrate a little! Announce the good news to your followers. Explain how to and why to use Klix payments to your users through visuals. 3. Social media banners about Klix Pay Later Update in progress, new materials will be added soon You are now part of Klix. Celebrate a little! Announce the good news to your followers. Explain how to and why to use Klix Pay Later to your users through visuals. 4. Klix Pay Later video instruction Download here To make sure your customers understand how to use Klix Pay Later, we have prepared short video instruction which you are welcomed to use in your webpage and advertising. <p> Materials in LT, RUS and ENG languages for LITHUANIAN market. </p> Where to use Visuals How to use 1. Main page banner on your website Update in progress, new materials will be added soon Make sure users get information about what Klix offers right away. Keep informative Klix banner on main page banner rotation. You can change and use several of options. Make sure to link banner to informative Klix landing page, so your users can read more, if they have questions. If you have to adjust size, in this folder, there is photoshop file which you can edit. 2. Social media banners about Klix Pay Update in progress, new materials will be added soon You are now part of Klix. Celebrate a little! Announce the good news to your followers. Explain how to and why to use Klix payments to your users through visuals. 3. Social media banners about Klix Pay Later Update in progress, new materials will be added soon You are now part of Klix. Celebrate a little! Announce the good news to your followers. Explain how to and why to use Klix Pay Later to your users through visuals. 4. Klix Pay Later video instruction Download here To make sure your customers understand how to use Klix Pay Later, we have prepared short video instruction which you are welcomed to use in your webpage and advertising."},{"location":"marketing-guidelines/#apple-pay-marketing-guidelines","title":"Apple Pay marketing guidelines","text":"<p>Discover the most effective ways to inform your customers about the convenience and security of utilizing Apple Pay for their online transactions. By providing clear guidance on how to leverage this payment method, you can streamline their purchasing experience, enhancing both speed and security. Read more here.</p>"},{"location":"marketing-guidelines/#legal-restrictions","title":"Legal restrictions","text":"<p>This section is only referring to Klix Pay Later communication with individuals. It does not reffer to any other Klix product or to Klix Pay Later communication for entrepreneurs.</p>"},{"location":"marketing-guidelines/#latvia","title":"Latvia","text":"Do's Dont's Positive example Merchants are allowed to inform their customers about payment options (including loan provided using Klix) on their e-commerce store. However, communication about loan provided using Klix should not make impression of an offer, invitation or encouragement to take a loan and should not offer any benefit for taking a loan. Such communication should not contain any additional information about conditions of loan offered using Klix (interest rate or other numerical information). Information on possibility to use loan provided using Klix included in advertisements of the merchant\u2019s products and published on the merchant\u2019s e-commerce store, its social media channels and newsletters. Merchants are allowed to include information about  loan provided using Klix if advertisement contains specific products/services of respective merchant. Merchants shouldn't advertise loan provided using Klix as a separate message, without relevant product or service of respective merchant for which loan provided using Klix can be used. Merchant\u2019s sponsored ads with a merchant\u2019s products on merchant\u2019s social media channels + post text containing \"Products are available for loan in cooperation with Klix\" Merchants are allowed to communicate without restrictions about Klix Pay Later and Klix Free if advertisement clearly states that this offer is for entrepreneurs. Merchant\u2019s sponsored ads on merchant\u2019s social media channels with slogan \"P\u0113rc tagad, maks\u0101 v\u0113l\u0101k\" + statement that offer is \"For entrepreneurs\". <p>Since you are responsible for staying compliant with loan advertising law, please stay up to date by following rules in your local government websites:</p> <ul> <li> <p>Latvia Section 8.3 Restrictions on Consumer Credit Advertising and ptac.gov.lv</p> </li> <li> <p>Lithuania e-tar.lt</p> </li> </ul> <p>Have questions? Contact us via marketing@klix.app</p>"},{"location":"pay-later-widget/","title":"Klix Pay Later widget","text":""},{"location":"pay-later-widget/#simple-monthly-payment-widget","title":"Simple monthly payment widget","text":"<p>In order to add Klix Pay Later monthly payment widget to your store place following script in head part of the page.</p> <pre><code>&lt;head&gt;\n   &lt;!-- Klix Pay Later widget --&gt;\n   &lt;script type=\"module\" src=\"https://klix.blob.core.windows.net/public/pay-later-widget/build/klix-pay-later-widget.esm.js\"&gt;&lt;/script&gt;\n   &lt;script nomodule=\"\" src=\"https://klix.blob.core.windows.net/public/pay-later-widget/build/klix-pay-later-widget.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre> <p>Then place Klix Pay Later monthly payment widget source code just below the product price. You should pass at least product price, language and your Brand ID to widget.</p> <pre><code>&lt;body&gt;\n   ...\n   &lt;klix-pay-later amount=\"67900\" brand_id=\"702314b8-dd86-41fa-9a22-510fdd71fa92\" \n      language=\"en\" theme=\"light\" view=\"product\" category=\"SPORTS_GOODS\"&gt;\n   &lt;/klix-pay-later&gt;\n   ...\n&lt;/body&gt;\n</code></pre> <p>For Shopify integration:</p> <pre><code>&lt;body&gt;\n   ...\n   &lt;klix-pay-later amount=\"{{ product.price | money_numbers_only}}\" brand_id=\"702314b8-dd86-41fa-9a22-510fdd71fa92\" \n      language=\"en\" theme=\"light\" view=\"product\" category=\"SPORTS_GOODS\"&gt;\n   &lt;/klix-pay-later&gt;\n   ...\n&lt;/body&gt;\n</code></pre> <p></p> <p>We strongly recommend to place Klix Pay Later monthly payment widget both on product, shopping cart and checkout page so that customer can preview monthly payment also if multiple different products are added to the shopping cart.</p> <p>Widget parameters are described in the following table.</p> Parameter Description Optional <code>amount</code> Product price in cents (if widget is shown in product view)/shopping cart item total amount in cents (if widget is shown in shopping cart/checkout view) false <code>brand_id</code> Brand ID assigned to your company after Klix agreement signing false <code>language</code> Widget language ( Latvia \"en\", \"lv\", \"ru\", Lithuania: \"lt\") false <code>theme</code> Currenly only \"light\" theme is supported true <code>view</code> Widget placement in site. Following placements are supported: \"product\", \"cart\", \"checkout\". true <code>category</code> Product category. Should be specified only in case merchant sells different type of goods. Possible values: TV_HOME_APPLIANCES, CLOTHES_SHOES_ACCESSORIES, ELECTRONICS, COMPUTER_EQUIPMENT, FURNITURE, SPORTING_GOODS, GARDEN_GOODS, COSMETICS, CHILDREN_GOODS, CAR_GOODS, MOTO_GOODS, FOR_HOME_AND_REPAIR, ZOO_GOODS, GROCERIES_AND_ALCOHOL, BOOKS, MEDICAL_GOODS, GIFT_CARDS, DELIVERY, OTHER true <code>type</code> If not provided widget size will be standard, if provided <code>type=\"micro\"</code> then widget will be small size. true <p>Klix Pay Later monthly payment widget displays monthly payment information depending on a country, financing product type assigned to your merchant configuration.</p> <p>Here are few examples of how Klix Pay Later monthly payment widget might look like in case of different financing product types:</p> <ul> <li>Monthly payment widget displaying grace i.e. Klix FREE financing product information for Latvian merchant</li> </ul> <ul> <li>Monthly payment widget displaying installment financing product information for Latvian merchant</li> </ul> <ul> <li>Monthly payment widget displaying commission financing product information for Latvian merchant</li> </ul> <ul> <li>Monthly payment widget displaying grace i.e. Klix FREE financing product information for Lithuanian merchant</li> </ul> <ul> <li>Monthly payment widget displaying installment financing product information for Lithuanian merchant</li> </ul> <ul> <li>Monthly payment widget displaying commission financing product information for Lithuanian merchant</li> </ul> <ul> <li>Monthly payment widget displaying installment financing product information for Latvian merchant</li> </ul> <ul> <li>Monthly micro payment widget displaying commission financing product information for Lithuanian merchant</li> </ul>"},{"location":"pay-later-widget/#monthly-payment-widget-with-adjustable-down-payment-amount","title":"Monthly payment widget with adjustable down-payment amount","text":"<p>In order to add Klix Pay Later monthly payment widget with adjustable down-payment amount to your store place following script in head part of the page.</p> <pre><code>&lt;head&gt;\n   &lt;!-- Klix Pay Later widget with adjustable down-payment amount --&gt;\n    &lt;script type=\"module\" src=\"https://klix.blob.core.windows.net/public/pay-later-calculator-widget/build/klix-widget.esm.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre> <p>Then place Klix Pay Later monthly payment widget source code in desired place and pass data-brand-id, data-loan-amount and data-locale-attributes.</p> <pre><code>&lt;body&gt;\n   ...\n   &lt;klix-widget id=\"klix-custom-widget\" data-brand-id=\"a6cef80b-92a4-4bc2-b611-7dc597f9a999\" data-loan-amount=\"75000\" data-locale=\"lv\"&gt;&lt;/klix-widget&gt;\n   ...\n&lt;/body&gt;\n</code></pre> <p>Here are few examples of how Klix Pay Later monthly payment widget with adjustable down-payment amount might look like in case of different financing product types:</p> <ul> <li>Monthly payment widget displaying grace i.e. Klix FREE financing product information for Latvian merchant</li> </ul> <ul> <li>Monthly payment widget displaying multiple installment financing product information for Lithuanian merchant</li> </ul>"},{"location":"pay-later-widget/#monthly-payment-widget-with-adjustable-order-and-down-payment-amount","title":"Monthly payment widget with adjustable order and down-payment amount","text":"<p>In order to add Klix Pay Later monthly payment widget with adjustable principal and down-payment amount to your store place following script in head part of the page. <pre><code>&lt;head&gt;\n   &lt;!-- Klix Pay Later widget with adjustable down-payment amount --&gt;\n    &lt;script type=\"module\" src=\"https://klix.blob.core.windows.net/public/pay-later-calculator-widget/build/klix-widget.esm.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre></p> <p>Then place Klix Pay Later monthly payment widget source code in desired place and pass data-brand-id, data-loan-amount, data-amount-slider and data-locale attributes.</p> <pre><code>&lt;klix-widget data-brand-id=\"702314b8-dd86-41fa-9a22-510fdd71fa92\" data-locale=\"en\" data-loan-amount=\"67800\" data-amount-slider=\"true\"&gt;&lt;/klix-widget&gt;\n</code></pre> Parameter Description Optional <code>data-brand-id</code> Brand ID assigned to your company after Klix agreement signing false <code>data-loan-amount</code> Product price in cents false <code>data-locale</code> Representative example language. Possible values: \"en\", \"lv\", \"ru\", \"lt\", \"et\" false <code>data-amount-slider</code> Paraameter should be set to <code>true</code> false"},{"location":"pay-later-widget/#monthly-payment-widget-with-custom-view","title":"Monthly payment widget with custom view","text":"<p>This type of widget allows you to implement monthly payment widget that matches your web-page design.  To enable monthly payment widget custom view you should set global variables <code>showCustomView</code> to <code>true</code> and provide implementation for following functions:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang='en'&gt;\n    &lt;head&gt;\n        ...\n        &lt;!-- Klix Pay Later widget --&gt;\n        &lt;script type=\"module\" src=\"https://klix.blob.core.windows.net/public/pay-later-widget/build/klix-pay-later-widget.esm.js\"&gt;&lt;/script&gt;\n        &lt;script nomodule=\"\" src=\"https://klix.blob.core.windows.net/public/pay-later-widget/build/klix-pay-later-widget.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"application/javascript\"&gt;\nwindow.showCustomView = true;\nwindow.customMiniWidget = {};\n\nwindow.customMiniWidget.populateData = function (data) {\n// This function will be called once monthly payment data is retrieved from Klix API.\n// data contains two fields: preferredOffer of type FinancingProduct and offers of type FinancingProduct[]:\n// data.preferredOffer is a preferred financing product offer determined by merchat configuration\n// data.offers is a list of all financing product offers available to this merchant\nthis.monthlyPaymentAmount = data.preferredOffer.monthlyPaymentAmount;\nthis.repaymentCount = data.preferredOffer.totalRepaymentCount;\n}\n\nwindow.customMiniWidget.returnWidgetView = function () {\n// This function should return string representation of HTML view of this custom design widget e.g. \nreturn `\n                &lt;div&gt;\n                    &lt;span&gt;${this.repaymentCount} m\u0113n. \u0425 ${this.monthlyPaymentAmount}&amp;nbsp;\u20ac&lt;/span&gt;\n                &lt;/div&gt;`\n}\n&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        ...\n        &lt;klix-pay-later amount=\"75000\" brand_id=\"a6cef80b-92a4-4bc2-b611-7dc597f9a000\" language=\"en\" theme=\"light\" view=\"product\" category=\"ELECTRONICS\"&gt;\n        &lt;/klix-pay-later&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>FinancingProduct</code> class fields description:</p> Parameter Description Type <code>id</code> Financing product id string <code>requestedAmount</code> Total purchase amount e.g. 600 EUR number <code>downPaymentAmount</code> Down-payment amount that will/must be paid by customer e.g. 100 EUR number <code>principalAmount</code> Loan amount to be borrowed e.g. 600-100=500 EUR number <code>apr</code> Annual percentage rate number <code>commissionRate</code> Commission rate number <code>fixedCommission</code> Commission amount if product have fixed commission amount number <code>interestRate</code> Interest rate number <code>gracePeriodRepaymentCount</code> Grace period repayment count (only for product type GRACE_PERIOD) number <code>totalRepaymentCount</code> Total loan repayment count number <code>monthlySplitPaymentAmount</code> Monthly payment amount if loan will be repaid within grace period number <code>monthlyPaymentAmount</code> Monthly payment amount including all fees number <code>monthlyPaymentGraceAmount</code> Monthly payment amount within grace period if extended term is chosen number <code>firstMonthPaymentAmount</code> First month payment amount for loan (monthly payment + commission fee in case of COMMISSION product) number <code>name</code> Name of this financing product string <code>productType</code> Type of this financing product. Possible values: <code>GRACE_PERIOD</code>, <code>INSTALLMENT_CREDIT</code>, <code>COMMISSION</code> string <code>sequence</code> Financing product sequence number"},{"location":"pay-later-widget/#representative-example","title":"Representative example","text":"<p>This API endpoint allows you to retrieve a representative example. The amount should correspond to the exact product price.</p> <pre><code>https://api.klix.app/financing/v2/preliminary-offers/pl/representative-example?b=702314b8-dd86-41fa-9a22-510fdd71fa92&amp;a=56000&amp;d=12&amp;l=en\n</code></pre> <p>Example <pre><code>{\n\"representativeExample\": \"Representative example: Loan amount: \u20ac560, loan duration: 12 mos., monthly payment: \u20ac46.67, total loan amount: \u20ac576.8, interest rate: 0%, annual percentage rate (APR): 5.78%, commission fee: \u20ac16.8. Calculations are only informative, and each customers situation is evaluated individually. The lending service using Klix is provided by AS Citadele banka, AS Lateko L\u012bzings, or SIA Aizdevums.lv.\"\n}\n</code></pre></p> <p><code>Preliminary offers</code> parameters description:</p> Parameter Description Optional <code>b</code> Brand ID assigned to your company after Klix agreement signing false <code>a</code> Product price in cents false <code>l</code> Representative example language. Possible values: \"en\", \"lv\", \"ru\", \"lt\", \"et\" true <code>d</code> The duration variable is used to specify the length of time over which the loan will be repaid. true"},{"location":"plugins-for-ecommerce-platforms/","title":"Plugins for eCommerce platforms","text":"<p>Klix provides plugins for most popular eCommerce platforms so that Klix can be integrated as simple as other plugins you might be already using in your shop. Integration using eCommerce platform plugin consists of a plugin installation and configuration. Plugin installation instructions differs between eCommerce platforms but configuration usually consists of two steps:</p> <ol> <li>Enabling Klix as a payment method.</li> <li>Specifying Brand ID and Secret key in plugin settings.</li> </ol> <p>If you have already signed Klix merchant agreement and have received production environment API keys then those should be used in these instructions. Otherwise there's an option to use test-environment credentials to preview Klix payment gateway solution functionality.</p>"},{"location":"plugins-for-ecommerce-platforms/#ecommerce-platforms","title":"eCommerce platforms","text":""},{"location":"plugins-for-ecommerce-platforms/#magento","title":"Magento","text":"<p>Compatible versions: 2.0+</p> <p>Installation instructions:</p> <ol> <li>Connect to Magento server terminal.</li> <li>Create and navigate to a directory <code>app/code/</code> in your Magento root directory if does not exist already.</li> <li>Download Klix Magento plugin: <code>curl https://portal.klix.app/ecommerce_modules/magento-v2.0+.zip --output magento-v2.0+.zip</code></li> <li>Extract Klix Magento plugin archive contents to <code>app/code/</code> directory so that there's <code>app/code/SpellPayment/Magento2Module</code> directory structure after that: <code>unzip -q magento-v2.0+.zip &amp;&amp; rm magento-v2.0+.zip</code></li> <li>Navigate to Magento root directory and run <code>php bin/magento module:enable SpellPayment_ExpressCheckout --clear-static-content</code></li> <li>Run <code>php bin/magento setup:upgrade</code></li> <li> <p>Run <code>php bin/magento setup:static-content:deploy</code> (note that message \"Manual static content deployment is not required in \"default\" and \"developer\" modes\" can be ignored). </p> </li> <li> <p>Log in to your Magento store admin panel. </p> </li> </ol>"},{"location":"plugins-for-ecommerce-platforms/#mozello","title":"Mozello","text":"<p>Installation instructions:</p> <ol> <li>Log in to your Mozello store administration portal.</li> <li> <p>Open <code>Catalog</code> -&gt; <code>Catalog settings</code> -&gt; <code>Payment</code> page and locate <code>Credit cards / payment platforms</code> section. </p> </li> <li> <p>Select \"Klix by Citadele\" in <code>Connect online payment platform</code> drop down and enter Brand ID and Secret key provided by Klix contact person. Change payment method title in checkout form if needed.</p> </li> <li>Go to your Mozello store checkout page and check that Klix payment method is available. It's advisable to test Klix integration using a real card. </li> </ol>"},{"location":"plugins-for-ecommerce-platforms/#opencart","title":"OpenCart","text":"<p>Compatible versions: 3.0-4+</p> <p>Installation instructions:</p> <ol> <li>Download plugin by Opencart version:<ul> <li>3.0+</li> <li>4.0+ </li> </ul> </li> <li> <p>Log in to your OpenCart store admin panel by specifying authentication credentials. </p> </li> <li> <p>Open \"Extensions\" -&gt; \"Installer\" section from the main menu. </p> </li> <li> <p>Press \"Upload\" button and select Klix OpenCart extension file downloaded in the first step. Progress bar will indicate extension upload progress. </p> </li> <li> <p>Open \"Extensions\" -&gt; \"Extensions\" section from the main menu and filter payment extensions. </p> </li> <li> <p>Find Klix extension in extension list and press \"+\" (Install). </p> </li> <li> <p>Press \"Edit\" Klix extension. </p> </li> <li> <p>Enter Brand ID and Secret key provided by Klix contact person, mark \"Enable API\" to enable Klix payment method and select order payment success and error statuses. </p> </li> <li> <p>Go to your OpenCart store checkout page and check that Klix payment method is available. It's advisable to test Klix integration using a real card. </p> </li> <li> <p>Localize Klix checkout page (optional). By default all Klix payment method section text elements are in English. In order to add translations for Klix section to your store checkout page go to OpenCart store admin panel, open \"Design\" -&gt; \"Language Editor\". Press on \"+\" (add new) button and for each language create translations for required keys: \"klix_payment_method_selection\" (Klix payment section title), \"klix_place_order\" (Klix pay button title). Note that empty translation key should be selected in translation key drop-down and one of previously mentioned Klix translation keys should be copied to text input field below translation key drop-down. In a given example translation for default \"Select payment method\" label is defined for Russian. In a similar way translation for pay button can be changed, the only difference is in translation key which should be \"klix_place_order\". Note that route should always be \"checkout/checkout\". </p> </li> <li> <p>Go to your OpenCart store checkout page and preview translations by switching to desired language. </p> </li> <li> <p>Pay Later widget will be enabled after modification refresh. Open \"Extensions\" -&gt; \"Modifications\" section. Click on  refresh button. </p> </li> </ol>"},{"location":"plugins-for-ecommerce-platforms/#prestashop","title":"PrestaShop","text":"<p>Compatible versions: 1.7+</p> <p>Installation instructions:</p> <ol> <li> <p>Download plugin by Prestashop version:</p> <ul> <li>1.6 - 1.6.1.11</li> <li>1.7 - 1.7.5 </li> <li>1.7.6 - 1.7.8.9 </li> <li>8.0 or newer </li> </ul> </li> <li> <p>Log in to your PrestaShop store admin panel by specifying authentication credentials. </p> </li> <li> <p>Open \"Modules\" -&gt; \"Module Manager\" section. </p> </li> <li> <p>Press \"Upload a module\" button. </p> </li> <li> <p>Select a module file downloaded in the first step. Selected module file will be installed. </p> </li> <li> <p>After module is installed press \"Configure\" button. </p> </li> <li> <p>Enter Brand ID and Secret key provided by Klix contact person, mark \"Enable API\" to enable Klix payment method. </p> </li> <li> <p>Localize Klix checkout page (optional). By default all Klix payment method section text elements are in English. In order to add translations for Klix section to your store checkout page press \"Translate\" button. </p> </li> <li> <p>Then choose your store language for which you would like to enter translations. </p> </li> <li> <p>And provide translations for all provided texts. </p> </li> <li> <p>Go to your PrestShop store checkout page and check that Klix payment method is available. It's advisable to test Klix integration using a real card. </p> </li> </ol>"},{"location":"plugins-for-ecommerce-platforms/#shopify","title":"Shopify","text":"<p>Installation instructions:</p> <ol> <li>Login to Business Portal </li> <li>After successful login open Shopify app store in new tab and install the plugin.</li> <li>During instalation Shopify will redirect to our Business Portal page to confirm Shopify store integration.     </li> <li>Business Portal will redirect back to Shopify settings to settings view. In settings click on Activate Klix payments.     </li> <li>Switch Payment capture method to automatically at checkout.  </li> <li>Go to your Shopify store checkout page and check that Klix payment method is available. For test purposes please enable Enable test mode checkbox.</li> </ol>"},{"location":"plugins-for-ecommerce-platforms/#woocommerce","title":"WooCommerce","text":"<p>Compatible versions: 3.5+</p> <p>Installation instructions:</p> <ol> <li>Click on this link to download Klix WooCommerce plugin.</li> <li> <p>Log in to your WooCommerce store admin panel by specifying authentication credentials. </p> </li> <li> <p>Open \"Plugins\" -&gt; \"Add new\" section. </p> </li> <li> <p>Press on \"Upload Plugin\" and select Klix WooCommerce plugin file downloaded in the first step, press \"Install Now\". In rare cases e.g. if your server is not configured to allow automatic installations you might need to install Klix WooCommerce plugin by manually transfering Klix plugin files onto the server. Follow these instructions in such case. </p> </li> <li> <p>Press \"Activate\" button to activate installed Klix WooCommerce plugin. </p> </li> <li> <p>Find Klix plugin and press on \"Settings\" link. </p> </li> <li> <p>Enter Brand ID and Secret key provided by Klix contact person and check <code>Enable API</code> checkbox. </p> </li> <li> <p>Go to your WooCommerce store checkout page and check that Klix payment method is available. It's advisable to test Klix integration using a real card. </p> </li> </ol>"},{"location":"representation-guidelines/","title":"Representation guidelines","text":"<p>Last updated 03.08.2023  <p>As a merchant using Klix, we kindly require you to follow our representation guidelines. Please read through these guidelines, as they contain basic information &amp; materials to ensure few, but important requirments on your e-commerce store: <ul> <li>Klix logo appearance</li> <li>Informative landing page about Klix</li> <li>Checkout button appearance</li> </ul> <p>To save your valuable time, we've made everything ready and easy to use.</p>"},{"location":"representation-guidelines/#klix-logo-on-your-webpage","title":"Klix logo on your webpage","text":"<p>Klix has to be represented equally to any other payment method on your website. Here is an explanation of how to make sure you used Klix logo on your webpage correctly: </p> Where to use Logo How to use Webpage footer and/or Payment method section PNG/SVG If you represent other payment methods in footer, add Klix logo. If you have payment method section, or you have payment methods mentioned in delivery section, add Klix logo."},{"location":"representation-guidelines/#klix-landing-page","title":"Klix landing page","text":"<p>Create easy to find landing page about Klix where you shoppers will answer their questions and increase trust in new payment methods.</p> Versions Banners &amp; text How to use Landing page text &amp; visuals Download here Use text from word files in languages you need. Make sure to follow instructions in word file comments to only leave payment information relevant to your shop. Use helpful instruction picture as in word file example. If adjustments are needed, use editable PSD banner files. <p>Landing page texts and banners can only be changed after written agreement in email with Klix marketing team.</p>"},{"location":"representation-guidelines/#checkout-buttons","title":"Checkout buttons","text":"<p>Read this section only if you have custom-built e-commerce store</p> <p>To be sure that your customers recognise Klix just as in any other place, and therefore you are able to maximise your sales, please make sure you are compliant with these requirements below.</p> <p>You should follow one of three guidelines below, depending on how you display payment options in your checkout.</p>"},{"location":"representation-guidelines/#with-visual-buttons","title":"With visual buttons","text":"<p>Please download checkout button assets here.</p> <p>This is what text next to visual checkout button should say in each language:</p> Product LV ENG LT RU Card Maks\u0101jumu karte Payment card Mok\u0117jimo kortel\u0117 \u041f\u043b\u0430\u0442\u0435\u0436\u043d\u0430\u044f \u043a\u0430\u0440\u0442\u0430 Internetbank Internetbanka Online banking Interneto bankas \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0431\u0430\u043d\u043a Instalments Nomaksa - Klix Pay Later Installments - Klix Pay Later Mok\u0117ti dalimis - Klix Pay Later \u0420\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u0430 - Klix Pay later Quick checkout Apmaks\u0101 t\u016bl\u012bt Pay now Apmok\u0117k i\u0161kart \u041e\u043f\u043b\u0430\u0442\u0438 \u0441\u0440\u0430\u0437\u0443"},{"location":"representation-guidelines/#with-text-buttons","title":"With text buttons","text":"<p>If your checkout doesn't have visual buttons, but has payment methods named in text format, this is what it should say in each language:</p> Product LV ENG LT RU Card Maks\u0101jumu karte / Klix Payment card / Klix Mok\u0117jimo kortel\u0117 / Klix \u041f\u043b\u0430\u0442\u0435\u0436\u043d\u0430\u044f \u043a\u0430\u0440\u0442\u0430 / Klix Internetbank Internetbanka Online banking Interneto bankas \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0431\u0430\u043d\u043a Instalments Nomaksa - Klix Pay Later Installments - Klix Pay Later Mok\u0117ti dalimis - Klix Pay Later \u0420\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u0430 - Klix Pay later Quick checkout Apmaks\u0101 t\u016bl\u012bt Pay now Apmok\u0117k i\u0161kart \u041e\u043f\u043b\u0430\u0442\u0438 \u0441\u0440\u0430\u0437\u0443"},{"location":"representation-guidelines/#with-text-buttons-combining-several-payment-methods","title":"With text buttons, combining several payment methods","text":"<p>If your checkout has text buttons and one button can name several payment methods, then these are options you should use:</p> Product LV ENG LT RU Internetbank &amp; Instalments Internetbanka vai nomaksa - Klix Online banking or installments - Klix Interneto bankas arba mok\u0117ti dalimis - Klix \u0418\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0431\u0430\u043d\u043a \u0438\u043b\u0438 \u0440\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u0430 - Klix Card &amp; Instalments Maks\u0101jumu karte vai nomaksa - Klix Payment card or Installments - Klix Mok\u0117jimo kortel\u0117 arba mok\u0117ti dalimis - Klix \u041f\u043b\u0430\u0442\u0435\u0436\u043d\u0430\u044f \u043a\u0430\u0440\u0442\u0430 \u0438\u043b\u0438 \u0440\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u0430 - Klix Card &amp; Internetbank Maks\u0101jumu karte vai internetbanka - Klix Payment card or online banking - Klix Mok\u0117jimo kortel\u0117 arba interneto bankas - Klix \u041f\u043b\u0430\u0442\u0435\u0436\u043d\u0430\u044f \u043a\u0430\u0440\u0442\u0430 \u0438\u043b\u0438 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0431\u0430\u043d\u043a - Klix Card &amp; Internetbank &amp; Instalments Maks\u0101jumu karte / internetbanka / nomaksa - Klix Payment card / Online banking / installments - Klix Mok\u0117jimo kortel\u0117 / interneto bankas / mok\u0117ti dalimis - Klix \u041f\u043b\u0430\u0442\u0435\u0436\u043d\u0430\u044f \u043a\u0430\u0440\u0442\u0430 / \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0431\u0430\u043d\u043a / \u0440\u0430\u0441\u0441\u0440\u043e\u0447\u043a\u0430 - Klix"},{"location":"representation-guidelines/#apple-pay","title":"Apple Pay","text":"<p>If you have custom integration, please follow the representation guidelines provided by Apple here.</p> <p>Have questions? Contact us via marketing@klix.app</p>"},{"location":"static-assets/","title":"Klix Pay and Klix Checkout assets for your store","text":""},{"location":"static-assets/#asset-usage-guide","title":"Asset usage guide","text":""},{"location":"static-assets/#1-klix-checkout-assets-for-klix-as-your-express-checkout-solution","title":"1. Klix Checkout assets for Klix as your express checkout solution","text":"<p>Use assets for your Klix express checkout buttons available in EN, LT, LV, RU.</p> Download asset in EN, LT, LV, RU languages"},{"location":"static-assets/#2-klix-assets-for-klix-and-klix-pay-later","title":"2. Klix assets for Klix and Klix Pay Later","text":"<p>2.1 Use assets for Klix card payments button (cards only)</p> Download SVG <p>2.2 Use assets for Klix card payments button (cards + Apple Pay)</p> Download SVG <p>2.3. Use assets for Klix Pay Later button</p> Download SVG Download PNG <p>Pay Later logo for Latvian market</p> Download SVG Download PNG <p>Pay Later logo for Lithuanian market</p> Download SVG Download PNG <p>Pay Later logo for Estonian market</p> Download SVG Download PNG"},{"location":"test-environment/","title":"Test environment API credentials","text":""},{"location":"test-environment/#testing-integration-with-test-cards","title":"Testing integration with test cards","text":"<p>In order to perform integration testing in recurring payment, reservation scenarios or in case production like callback data is needed to test some integration scenario following test account API credentials can be used:</p> Brand ID Secret key 702314b8-dd86-41fa-9a22-510fdd71fa92 IB-bzOdJLgJjbsaA34Qpxkg1TTIrW-iDuni6JuzbP--KgtsREHzvIvLLTH8E5T0CZcSbYM3qNmfeogpWW_RZaA==  <p>Note that this test account has access only to Klix card payment method on test environment and specific test cards should be used for testing:</p> Issuer PAN CVV Expiry date 3D secure password VISA 4314 2200 0000 0056 123 01/28 hint MASTERCARD 5413 3300 0000 0019 589 01/28 hint <p>Any cardholder name can be used with these cards.</p> <p>Please try to make payment with both cards in case one card payments fails.</p>"},{"location":"test-environment/#simplified-integration-testing","title":"Simplified integration testing","text":"<p>In order to preview Klix payment gateway functionality and test integration implementation following test account API credentials can be used:</p> Brand ID Secret key 702314b8-dd86-41fa-9a22-510fdd71fa92 No51P_Dq4jQGeha6_eQpfjAFe67u3QYHEO95jrcCux0zPfByd8x9poSa6xINQPz1hyUGKNYoxa16rnUkSUI_MA== <p>In case of Klix card payment method after redirecting customer to the Klix payment page (field \"checkout_url\" value from Purchase creation response) there's an option to choose either successful or failed payment scenario for testing purposes. In case of bank transfers and Klix Pay Later only success scenario is supported in test environment.</p> <p></p>"}]}